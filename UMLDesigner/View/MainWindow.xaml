<Window x:Class="UMLDesigner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:View="clr-namespace:UMLDesigner.View"
        xmlns:VM="clr-namespace:UMLDesigner.ViewModel"
        xmlns:Model="clr-namespace:UMLDesigner.Model;assembly=UMLDesigner.Model"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        xmlns:util="clr-namespace:UMLDesigner.Utilities"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        Title="UML Designer" Height="400" Width="525" WindowState="Maximized">
    <Window.Resources>
        <!-- Dette DataTemplate fortæller vinduet hvordan Node klassen skal vises grafisk. Denne grafiske beskrivelse er samlet i NodeUserControl. -->
        <DataTemplate DataType="{x:Type VM:EdgeViewModel}">
            <Canvas>
                <View:EdgeUserControl/>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type VM:NodeViewModel}">
            <Canvas>
                <View:ClassUserControl/>
            </Canvas>
        </DataTemplate>
    </Window.Resources>
   <Window.InputBindings>
      <KeyBinding Command="{Binding KeyDownUndoCommand}" CommandParameter="undo" Gesture="CTRL+Z"/>
      <KeyBinding Command="{Binding KeyDownUndoCommand}" CommandParameter="redo" Gesture="CTRL+Y" />
      <KeyBinding Command="{Binding KeyDownSaveLoadCommand}" CommandParameter="save" Gesture="CTRL+S"/>
      <KeyBinding Command="{Binding KeyDownSaveLoadCommand}" CommandParameter="load" Gesture="CTRL+O"/>
      <KeyBinding Command="{Binding KeyDownCopyPasteCommand}" CommandParameter="copy" Gesture="CTRL+C"/>
      <KeyBinding Command="{Binding KeyDownCopyPasteCommand}" CommandParameter="paste" Gesture="CTRL+V"/>
      <KeyBinding Command="{Binding KeyDownExportCommand}" CommandParameter="export" Gesture="CTRL+P" />
      <KeyBinding Command="{Binding KeyDownNewNodeCommand}" CommandParameter="newclass" Gesture="CTRL+N" />
    </Window.InputBindings>
   
    <DockPanel>

        <DockPanel.Resources>
        <util:BoolToStringConverter x:Key="CGridVisibility" FalseValue="Collapsed" TrueValue="Visible" />
        </DockPanel.Resources>

        <View:RibbonUserContol DockPanel.Dock="Top" Focusable="True" x:Name="QContol"/>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusBar}"/>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <!--Adornerdecorator is made to make sure the adorner is in the background, and not the foreground-->
            <AdornerDecorator >
                <!-- Smid BoolToValueConverter ind her-->
                <View:GridWithRulerxaml Visibility="{Binding GridVisibility, Converter={StaticResource CGridVisibility}}"  />
            </AdornerDecorator>
            <Canvas>
            <Canvas.RenderTransform>
                <ScaleTransform ScaleX="{Binding Scale}" ScaleY="{Binding Scale}"></ScaleTransform>
            </Canvas.RenderTransform>
            <ItemsControl ItemsSource="{Binding Edges}"/>
            <ItemsControl ItemsSource="{Binding Classes}"/>
            </Canvas>
        </Grid>
    </DockPanel>
    <!-- Event trigger detects mouseclick on canvas -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseUp">
            <cmd:EventToCommand Command="{Binding MouseDownCanvasCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
